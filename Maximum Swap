/*
You are given an integer num. You can swap two digits at most once to get the maximum valued number.
Return the maximum valued number you can get.

Example 1:
Input: num = 2736
Output: 7236
Explanation: Swap the number 2 and the number 7.

Example 2:
Input: num = 9973
Output: 9973
Explanation: No swap.
 
Constraints:
0 <= num <= 10^8
*/
class Solution {
public:
    int maximumSwap(int num) {
        string s = to_string(num);
        int n = s.size();
        vector<int> rightMax(n);
        rightMax[n - 1] = n - 1;
        for (int i = n - 2; i >= 0; i--) {
            if (s[i] > s[rightMax[i + 1]]) {
                rightMax[i] = i;
            } else {
                rightMax[i] = rightMax[i + 1];
            }
        }
        for (int i = 0; i < n; i++) {
            if (s[i] != s[rightMax[i]]) {
                swap(s[i], s[rightMax[i]]);
                break;
            }
        }
        return stoi(s);
    }
};
