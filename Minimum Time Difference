/*
Given a list of 24-hour clock time points in "HH:MM" format, return the minimum minutes difference between any two time-points in the list.
 
Example 1:
Input: timePoints = ["23:59","00:00"]
Output: 1

Example 2:
Input: timePoints = ["00:00","23:59","00:00"]
Output: 0
 
Constraints:
2 <= timePoints.length <= 2 * 10^4
timePoints[i] is in the format "HH:MM".
*/
class Solution {
public:
    int findMinDifference(vector<string>& timePoints) {
        vector<int> minute;

        for(int i=0;i<timePoints.size();i++){
            int hr=stoi(timePoints[i].substr(0,2));
            int min=stoi(timePoints[i].substr(3,2));

            int mins=hr*60+min;
            minute.push_back(mins);
        }

        sort(minute.begin(),minute.end());
        int ans=INT_MAX;
        for(int i=1;i<minute.size();i++){
            ans=min(minute[i]-minute[i-1],ans);
        }
        return min(ans,1440+minute[0]-minute.back());
    }
};
